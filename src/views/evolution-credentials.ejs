<div class="container-fluid px-md-5 mt-4">
  <h1 class="mb-4"><%= title %></h1>

  <% if (messages.success && messages.success.length) { %>
    <div class="alert alert-success alert-dismissible fade show" role="alert">
      <%= messages.success[0] %>
      <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
  <% } %>
  <% if (messages.error && messages.error.length) { %>
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
      <%= messages.error[0] %>
      <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
  <% } %>

  <% if (!credentials || credentials.length === 0) { %>
    <div class="card mb-4">
      <div class="card-body">
        <h5 class="card-title">Nenhuma credencial encontrada</h5>
        <form action="/evolution-credentials" method="post" class="row g-3">
          <div class="col-md-6">
            <label for="phone" class="form-label">Telefone (WhatsApp)</label>
            <input type="text" id="phone" name="phone" class="form-control" placeholder="55XXXXXXXXX" required>
          </div>
          <div class="col-md-6">
            <label for="instance_name" class="form-label">Nome do Agente</label>
            <input type="text" id="instance_name" name="instance_name" class="form-control" placeholder="Nome do seu Agente">
          </div>
          <div class="col-12">
            <button type="submit" class="btn btn-primary">Criar Credencial</button>
          </div>
        </form>
      </div>
    </div>
  <% } else { %>
    <div class="d-flex justify-content-end mb-3">
      <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#createModal">
        <i class="bi bi-plug"></i> Conectar
      </button>
    </div>
    <div class="card">
      <div class="card-body">
        <table class="table table-hover mb-0 text-center">
          <thead class="table-light">
            <tr>
              <th>Telefone</th>
              <th>Nome do Agente</th>
              <th>Status</th>
              <th>Ações</th>
            </tr>
          </thead>
          <tbody>
            <% credentials.forEach(function(cred) { %>
              <tr>
                <td><%= cred.phone %></td>
                <td><%= cred.agent_name || '-' %></td>
                <td>
                  <% if (cred.status === 'connecting' || cred.status === 'created') { %>
                    <span class="badge bg-warning">Aguardando Conexão</span>
                  <% } else if (cred.status === 'open') { %>
                    <span class="badge bg-success">Conectado</span>
                  <% } else if (cred.status === 'close') { %>
                    <span class="badge bg-danger">Desconectado</span>
                  <% } else { %>
                    <span class="badge bg-secondary">Não Configurado</span>
                  <% } %>
                </td>
                <td>
                  <% if (cred.status === 'connecting' || cred.status === 'created' || cred.status === 'close') { %>
                    <button type="button" class="btn btn-info btn-sm btn-qr" data-instance-id="<%= cred.id %>">
                      <i class="bi bi-qr-code"></i> Reconectar
                    </button>
                    <button type="button" class="btn btn-warning btn-sm btn-restart" data-instance-id="<%= cred.id %>">
                      <i class="bi bi-arrow-clockwise"></i> Reiniciar
                    </button>
                  <% } else if (cred.status === 'open') { %>
                    <button type="button" class="btn btn-warning btn-sm btn-restart" data-instance-id="<%= cred.id %>">
                      <i class="bi bi-arrow-clockwise"></i> Reiniciar
                    </button>
                  <% } %>
                  <!-- Botão para deletar instância e credencial -->
                  <form action="/evolution-credentials/<%= cred.id %>/delete" method="post" style="display:inline-block; margin-left:8px;">
                    <button type="submit" class="btn btn-danger btn-sm" onclick="return confirm('Tem certeza que deseja excluir esta instância?');">
                      <i class="bi bi-trash"></i> Excluir
                    </button>
                  </form>
                </td>
              </tr>
            <% }); %>
          </tbody>
        </table>
      </div>
    </div>
  <% } %>

  <div class="mt-4">
    <a href="/dashboard" class="btn btn-secondary">Voltar</a>
  </div>
</div>

<!-- Modal para QR Code -->
<div class="modal fade" id="qrModal" tabindex="-1" aria-labelledby="qrModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="qrModalLabel">Escaneie o QR Code com o WhatsApp Business</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fechar"></button>
      </div>
      <div class="modal-body text-center">
        <div id="qrPairing" class="mb-2" style="font-weight:bold;"></div>
        <img id="qrModalImage" src="" alt="QR Code" style="max-width:100%;" />
      </div>
    </div>
  </div>
</div>

<!-- Modal para criação de nova instância -->
<div class="modal fade" id="createModal" tabindex="-1" aria-labelledby="createModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="createModalLabel">Criar Nova Instância</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fechar"></button>
      </div>
      <div class="modal-body">
        <form action="/evolution-credentials" method="post">
          <div class="mb-3">
            <label for="phone" class="form-label">Telefone (WhatsApp)</label>
            <input type="text" id="phone" name="phone" class="form-control" placeholder="55XXXXXXXXX" required>
          </div>
          <div class="mb-3">
            <label for="instance_name" class="form-label">Nome do Agente</label>
            <input type="text" id="instance_name" name="instance_name" class="form-control" placeholder="Nome do seu Agente">
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
            <button type="submit" class="btn btn-success">Criar Instância</button>
          </div>
        </form>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    // Ao clicar no botão de QR Code, buscar via API e exibir modal
    document.querySelectorAll('.btn-qr').forEach(btn => {
      btn.addEventListener('click', async () => {
        const id = btn.getAttribute('data-instance-id');
        // Limpar imagem e texto
        const qrModalEl = document.getElementById('qrModal');
        document.getElementById('qrModalImage').src = '';
        document.getElementById('qrPairing').innerText = 'Carregando código...';
        // Exibir modal imediatamente
        const modalInstance = new bootstrap.Modal(qrModalEl);
        modalInstance.show();
        // Fetch do QR Code
        try {
          const res = await fetch(`/evolution-credentials/${id}/qrcode`, {
            credentials: 'same-origin',
            headers: { 'Accept': 'application/json' }
          });
          if (!res.ok) throw new Error('Falha ao obter QR Code');
          const data = await res.json();
          // Mostrar imagem via base64 (já com prefixo se retornado)
          if (data.base64) {
            // Garantir prefixo data URI
            let imgSrc = data.base64;
            if (!imgSrc.startsWith('data:')) {
              imgSrc = 'data:image/png;base64,' + imgSrc;
            }
            document.getElementById('qrModalImage').src = imgSrc;
          } else {
            console.warn('QR code base64 ausente');
            document.getElementById('qrModalImage').src = '';
          }
          // Exibir pairingCode apenas se existir
          const pairingEl = document.getElementById('qrPairing');
          if (data.pairingCode) {
            pairingEl.innerText = 'Código de conexão: ' + data.pairingCode;
            pairingEl.style.display = '';
          } else {
            pairingEl.style.display = 'none';
          }
        } catch (err) {
          console.error('Erro ao carregar QR Code:', err);
          document.getElementById('qrPairing').innerText = 'Erro ao carregar código';
        }
        // Recarregar página ao fechar o modal
        qrModalEl.addEventListener('hidden.bs.modal', () => window.location.reload(), { once: true });
      });
    });

    document.querySelectorAll('.btn-restart').forEach(btn => {
      btn.addEventListener('click', async () => {
        const id = btn.getAttribute('data-instance-id');
        if (!confirm('Deseja reiniciar esta instância?')) return;
        try {
          const res = await fetch(`/api/evolution-credentials/${id}/restart`, {
            method: 'POST',
            headers: { 'Accept': 'application/json' },
            credentials: 'same-origin'
          });
          if (!res.ok) throw new Error('Falha ao reiniciar');
          alert('Instância reiniciada com sucesso');
          window.location.reload();
        } catch (err) {
          console.error(err);
          alert('Erro ao reiniciar instância: ' + err.message);
        }
      });
    });
  });
</script>

<% if (typeof qrImage !== 'undefined' && qrImage) { %>
  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const qrModalEl = document.getElementById('qrModal');
      // Garantir prefixo data URI para QR criação inicial
      let initialSrc = '<%= qrImage %>';
      if (!initialSrc.startsWith('data:')) {
        initialSrc = 'data:image/png;base64,' + initialSrc;
      }
      document.getElementById('qrModalImage').src = initialSrc;
      // Exibir pairingCode apenas se existir
      const pairingEl = document.getElementById('qrPairing');
      const code = '<%= pairingCode %>';
      if (code) {
        pairingEl.innerText = 'Código de conexão: ' + code;
        pairingEl.style.display = '';
      } else {
        pairingEl.style.display = 'none';
      }
      const modalInstance = new bootstrap.Modal(qrModalEl);
      qrModalEl.addEventListener('hidden.bs.modal', () => window.location.reload());
      modalInstance.show();
    });
  </script>
<% } %> 