#!/usr/bin/env node

require('dotenv').config({ path: require('path').resolve(__dirname, '../src/.env') });

const WhatsappCredentialController = require('../src/controllers/whatsappCredentialController');

async function testMetaAuth() {
  console.log('üîç Testando autentica√ß√£o da Meta...\n');

  // Verificar se o controller est√° funcionando
  console.log('üì± Verificando controller:');
  console.log(`   Controller: ${typeof WhatsappCredentialController === 'object' ? '‚úÖ' : '‚ùå'}`);
  console.log(`   processFacebookAuth: ${typeof WhatsappCredentialController.processFacebookAuth === 'function' ? '‚úÖ' : '‚ùå'}`);
  console.log(`   exchangeCodeForToken: ${typeof WhatsappCredentialController.exchangeCodeForToken === 'function' ? '‚úÖ' : '‚ùå'}`);
  console.log(`   getWhatsAppBusinessAccount: ${typeof WhatsappCredentialController.getWhatsAppBusinessAccount === 'function' ? '‚úÖ' : '‚ùå'}`);

  // Verificar vari√°veis de ambiente
  console.log('\nüîß Verificando vari√°veis de ambiente:');
  console.log(`   META_APP_ID: ${process.env.META_APP_ID || '‚ùå N√ÉO CONFIGURADO'}`);
  console.log(`   META_APP_SECRET: ${process.env.META_APP_SECRET ? '‚úÖ CONFIGURADO' : '‚ùå N√ÉO CONFIGURADO'}`);
  console.log(`   META_REDIRECT_URI: ${process.env.META_REDIRECT_URI || '‚ùå N√ÉO CONFIGURADO'}`);

  // Testar m√©todo exchangeCodeForToken
  console.log('\nüß™ Testando m√©todo exchangeCodeForToken...');
  try {
    // Simular uma chamada (sem c√≥digo real)
    const testResult = await WhatsappCredentialController.exchangeCodeForToken('test-code');
    console.log('‚úÖ M√©todo executado com sucesso');
    console.log(`   Resultado: ${JSON.stringify(testResult)}`);
  } catch (error) {
    console.log('‚ùå Erro ao executar m√©todo:', error.message);
  }

  // Testar m√©todo getWhatsAppBusinessAccount
  console.log('\nüß™ Testando m√©todo getWhatsAppBusinessAccount...');
  try {
    // Simular uma chamada (sem token real)
    const testResult = await WhatsappCredentialController.getWhatsAppBusinessAccount('test-token');
    console.log('‚úÖ M√©todo executado com sucesso');
    console.log(`   Resultado: ${JSON.stringify(testResult)}`);
  } catch (error) {
    console.log('‚ùå Erro ao executar m√©todo:', error.message);
  }

  console.log('\n‚úÖ Teste conclu√≠do!');
  console.log('\nüí° Se todos os m√©todos est√£o funcionando, o problema pode estar em:');
  console.log('   1. Middleware de autentica√ß√£o');
  console.log('   2. Contexto da requisi√ß√£o');
  console.log('   3. Configura√ß√£o das rotas');
}

// Executar o teste
testMetaAuth().catch(console.error);
